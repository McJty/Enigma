#-------------------------------------------------------------
# This is the setup. This is called when the world is created
#-------------------------------------------------------------
on setup:
    log "##### root.setup"

    # Give a warning is this is not a Lost City world
    if !lc_valid():
        message fmt_red() + fmt_bold() + "You need a Lost City world!" 320

    # Because of how our Lost City assets are defined (userassets.json) we know
    # that there is a multi building at a certain position. The only thing we
    # have to ask to Lost Cities is the height of that building. The number of
    # floors is fixed (5 floors).
    var floor0 lc_floor0(pos(170,96,164,0))

    # Floor4 (top floor) is where the player starts. Here we define positions
    # on that floor that we are going to need for this part of the story. Remember
    # that in Lost Cities floors are a multiple of 6.
    local floor4 $floor0 + 6*4 + 1
    position startpos 170 $floor4 164 0
    position keypos 180 $floor4 164 0
    position zombiepos 185 $floor4 185 0
    position zombietriggerpos 170 $floor4 187 0
    position zombietrappos 164 $floor4 178 0
    position doorpos 167 $floor4 175 0
    area topdoor 167 $floor4 162 167 $floor4+2 165 0

    # Every position for floor3.
    local floor3 $floor0 + 6*3 + 1
    position turnonlightspos 174 $floor3 168 0
    position light1 176 $floor3 170 0
    position light2 171 $floor3 170 0
    position light3 176 $floor3 174 0
    position light4 171 $floor3 174 0
    position wooddoor 174 $floor3 184 0
    position chestpos 185 $floor3 172 0
    position color1 185 $floor3 170 0
    position color2 185 $floor3 169 0
    position color3 185 $floor3 168 0
    position color4 185 $floor3 167 0
    position checkcolor1 184 $floor3+1 170 0
    position checkcolor2 184 $floor3+1 169 0
    position checkcolor3 184 $floor3+1 168 0
    position checkcolor4 184 $floor3+1 167 0
    area wallarea 173 $floor3 174 174 $floor3+2 174 0

    # Here we define all the blocks that we are going to need in this game
    blockstate air:
        name "minecraft:air"
    blockstate gold:
        name "minecraft:gold_block"
    blockstate redstone:
        name "minecraft:redstone_torch"
    blockstate torch:
        name "minecraft:torch"
    blockstate chest:
        name "minecraft:chest"
    blockstate chest5:
        name "minecraft:chest"
        meta 5
    blockstate skull:
        name "minecraft:skull"
    blockstate wall:
        name "minecraft:cobblestone_wall"
    blockstate doorunder:
        name "minecraft:iron_door"
    blockstate doorup:
        name "minecraft:iron_door"
        meta 8
    blockstate wooddoorunder:
        name "minecraft:wooden_door"
        meta 1
    blockstate wooddoorup:
        name "minecraft:wooden_door"
        meta 9

    blockstate red:
        name "minecraft:wool"
        meta 14
    blockstate green:
        name "minecraft:wool"
        meta 5

    blockstate wool1:
        name "minecraft:wool"
        meta 15
    blockstate wool2:
        name "minecraft:wool"
        meta 11
    blockstate wool3:
        name "minecraft:wool"
        meta 1
    blockstate wool4:
        name "minecraft:wool"
        meta 2
    blockstate wool5:
        name "minecraft:wool"
        meta 4

    # Place chests where we need them
    setblock keypos chest
    setblock chestpos chest5

    # Define a strong zombie mob
    mob enemy:
        name "minecraft:zombie"
        item sword
        helmet itemstack("minecraft:diamond_helmet")
        chestplate itemstack("minecraft:diamond_chestplate")
        leggings itemstack("minecraft:diamond_leggings")
        boots itemstack("minecraft:diamond_boots")
        hp 100

    # A particle system for breaking down the wall
    createparticles smoke:
        name "smoke"
        amount 100
        offset 0 0 0
        speed .20

    # A key and a pickaxe that we need in the game
    itemstack mysteriouskey:
        name "enigma:key"
        meta 1
        description "Mysterious key"
    itemstack pickaxe:
        name "minecraft:iron_pickaxe"
        meta 0
        description "Pickaxe"

#-------------------------------------------------------------
# This is a subroutine (called a block) which is responsible
# for setting up the game. It is called when the player first joins
# the world but also when the player dies to reset everything
#-------------------------------------------------------------
block setup:
    hp 2
    kill enemy
    setblock topdoor gold
    setblock zombietrappos skull
    setblock down(doorpos,2) air
    setblock light1 air
    setblock light2 air
    setblock light3 air
    setblock light4 air
    setblock wallarea wall
    setblock doorpos doorunder
    setblock up(doorpos,1) doorup
    setblock wooddoor wooddoorunder
    setblock up(wooddoor,1) wooddoorup
    setblock color1 wool1
    setblock color2 wool1
    setblock color3 wool1
    setblock color4 wool1
    call checkcolors
    teleport startpos
    lookat mincorner(topdoor)
    setting chat false
    command "clear"
    command "gamemode adventure"
    command "time set day"
    command "difficulty normal"
    fxanim color 1 1 0 0 0 1 0 0 0

#-------------------------------------------------------------
# Handle player startup and death. This is a player scope which
# is always active (because of the 'true' condition). That means
# that the 'on death' which is present here will always be catched
# no matter where in the game we are. The 'on delay' statements
# are only called when this scope activates which is once when
# the player joins the world.
#-------------------------------------------------------------
pscope "player" true:

    on delay 4:
        # Make sure the player sees nothing
        fxanim color 1 1 0 0 0 1 0 0 0

    on delay 50:
        # Change the gamestate of the player to 'start' to begin
        # the game
        pstate playerstate start

    on death:
        # The player just died. Make sure the enemy mob is gone
        # to prevent the player from being killed over and over and
        # revive the player. Then do the death animation and set
        # the playerstate to 'death'
        kill enemy
        hp 2
        fxanim colorandback 20 0 0 0 0 1 1 0 0
        pstate playerstate death

#-------------------------------------------------------------
# When 'playerstate' is in the 'death' state this will handle
# the death animation and make sure the player ends up in the first
# room again when it is done
#-------------------------------------------------------------
pscope "death_sequence" pstate(playerstate) == death:

    on delay 20:
        fxanim color 100 0 0 0 0 1 0 0 0

    on delay 120:
        call setup
        fxanim color 60 1 0 0 0 0 0 0 0
        pstate playerstate firstroom

#-------------------------------------------------------------
# Handle the initial startup of the game. This will also call
# the intro.
#-------------------------------------------------------------
pscope "start" pstate(playerstate) == start:
    on activate:
        call setup
        pstate playerstate intro

#-------------------------------------------------------------
# This block tests if the colors are right for the 'mastermind'
# game. If so it changes the state of the game to 'secondroom_open'
#-------------------------------------------------------------
block checkcolors:
    local v 0
    if isblock(color1,wool2):
        setblock checkcolor1 green
        local v $v+1
    else:
        setblock checkcolor1 red
    if isblock(color2,wool3):
        setblock checkcolor2 green
        local v $v+1
    else:
        setblock checkcolor2 red
    if isblock(color3,wool5):
        setblock checkcolor3 green
        local v $v+1
    else:
        setblock checkcolor3 red
    if isblock(color4,wool4):
        setblock checkcolor4 green
        local v $v+1
    else:
        setblock checkcolor4 red
    if $v == 4:
        message "Perhaps the chest is open now?" 120
        pstate playerstate secondroom_open

#-------------------------------------------------------------
# Handle the intro of the game and when that is finished
# set the state to 'firstroom' which begins the actual game
#-------------------------------------------------------------
pscope "intro" pstate(playerstate) == intro:

    on activate:
        message "You are in the darkness..." 120

    on delay 140:
        message "What is happening?" 120

    on delay 280:
        message "Slowly you start opening your eyes" 120

    on delay 320:
        teleport startpos
        fxanim color 60 1 0 0 0 0 0 0 0

    on delay 360:
        pstate playerstate firstroom

#-------------------------------------------------------------
# Handle the first room. In this state we wait until the player
# manages to find the key in the chest and opens the golden wall.
# After that we spawn the zombie if we are in a certain area
# and start the 'zombiechase' state
#-------------------------------------------------------------
pscope "firstroom" pstate(playerstate) == firstroom:
    on rightclickposition keypos:
        if hasitem(mysteriouskey):
            message "Nothing else can be found!" 100
        else:
            message fmt_green() + fmt_bold() + "You find a mysterious key in the chest" 120
            give mysteriouskey
        cancel

    on rightclickposition doorpos:
        message "This door will not open!" 120
        cancel

    on rightclickposition up(doorpos,1):
        message "This door will not open!" 120
        cancel

    on rightclickblock skull:
        message "This does not seem to harm you" 120
        cancel

    on rightclickblock gold:
        if hasitem(mysteriouskey):
            message "The door simply disappears!" 120
            setmimic topdoor gold
            fxanim colormimic 40 topdoor 1 1 1 0 0 0
            sound playerpos() "enigma:locking"
            take mysteriouskey
            delay 42:
                setblock topdoor air
        else:
            message "You need a key!"
        cancel

    on repeat 50:
        if distance(zombietriggerpos) < 12:
            message fmt_red() + fmt_bold() + "Beware of the zombie!" 120
            spawn zombiepos enemy
            pstate playerstate zombiechase

#-------------------------------------------------------------
# The zombie is chasing the player. The player has to lead
# the zombie on the skull to kill it
#-------------------------------------------------------------
pscope "zombiechase" pstate(playerstate) == zombiechase:
    on rightclickblock skull:
        message "Would this kill the zombie?" 120
        cancel

    on rightclickposition doorpos:
        message "This door will not open!" 120
        cancel

    on rightclickposition up(doorpos,1):
        message "This door will not open!" 120
        cancel

    on repeat 10:
        if distance(pos(enemy),zombietrappos) <= 2:
            message "This appears to be bad for the zombie" 120
            message "Maybe I can now leave this room?" 120
            kill enemy
            fxanim rotate 20 yaw() pitch() yaw(doorpos) pitch(doorpos)
            lookat doorpos
            pstate playerstate tosecondroom

#-------------------------------------------------------------
# Intermediate state that waits until the player tries
# to open the iron door
#-------------------------------------------------------------
pscope "tosecondroom" pstate(playerstate) == tosecondroom:

    on rightclickposition doorpos:
        message "The door opens!" 120
        setblock down(doorpos,2) redstone
        pstate playerstate secondroom_init
        cancel

    on rightclickposition up(doorpos,1):
        message "The door opens!" 120
        setblock down(doorpos,2) redstone
        pstate playerstate secondroom_init
        cancel

#-------------------------------------------------------------
# Intermediate state that waits until the player goes down the
# stairs at which point the lights go on and the secondroom
# state starts for real
#-------------------------------------------------------------
pscope "secondroom_init" pstate(playerstate) == secondroom_init:

    on repeat 5:
        if distance(turnonlightspos) < 6:
            message "And the lights go on!"
            setblock light1 torch
            setblock light2 torch
            setblock light3 torch
            setblock light4 torch
            pstate playerstate secondroom

#-------------------------------------------------------------
# This is the state for the 'mastermind' game
#-------------------------------------------------------------
pscope "secondroom" pstate(playerstate) == secondroom:

    on rightclickblock wall:
        message "This wall is blocked. I need to find" 120
        message "a pickaxe to break it open" 120
        cancel

    on rightclickposition chestpos:
        message "This chest is locked somehow" 120
        cancel

    on rightclickposition color1:
        local idx int(substring(blockname(color1),4))+1
        if $idx > 5:
            local idx 1
        setblock color1 "wool" + $idx
    on rightclickposition color2:
        local idx int(substring(blockname(color2),4))+1
        if $idx > 5:
            local idx 1
        setblock color2 "wool" + $idx
    on rightclickposition color3:
        local idx int(substring(blockname(color3),4))+1
        if $idx > 5:
            local idx 1
        setblock color3 "wool" + $idx
    on rightclickposition color4:
        local idx int(substring(blockname(color4),4))+1
        if $idx > 5:
            local idx 1
        setblock color4 "wool" + $idx

    on repeat 5:
        call checkcolors

#-------------------------------------------------------------
# When the player solves the mastermind game we have a pickaxe
# and so the wall can be broken
#-------------------------------------------------------------
pscope "secondroom_open" pstate(playerstate) == secondroom_open:

    on rightclickposition chestpos:
        if hasitem(pickaxe):
            message "Nothing else can be found!" 100
        else:
            message fmt_green() + fmt_bold() + "You find a pickaxe in the chest" 120
            give pickaxe
        cancel

    on rightclickblock wall:
        if hasitem(pickaxe):
            message "Using the pickaxe you break the wall" 120
            setblock wallarea air
            sound playerpos() "enigma:rockbreaking"
            particle mincorner(wallarea) smoke
            particle maxcorner(wallarea) smoke
            pstate playerstate theend
        else:
            message "This wall is blocked. I need to find" 120
            message "a pickaxe to break it open" 120
            message "Perhaps I should check that chest?" 120
        cancel

#-------------------------------------------------------------
# The end state
#-------------------------------------------------------------
pscope "theend" pstate(playerstate) == theend:

    on delay 40:
        message "This is only a demo" 120
    on delay 80:
        message "The game ends here for now" 120
    on delay 120:
        message "More can be expected later!" 120
